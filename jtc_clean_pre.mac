//******************************************************
//JTC　特許協力条約（見解書）翻訳ファイル前処理
//2009.06.09 created
//作業フォルダ内（\textdata）のファイル（見解書_翻訳の流れ）上で実行する
//前提条件：作業フォルダ内に既にData2ProでTEXT変換した
//          ファイル(000003.txtなど)がある
//2014.8.20
//各国際出願番号の下に第I欄のIPCを取得するように修正 
//******************************************************
$key1 = "国際出願番号POT/|国際出願番号P CT/ ";
//第V欄のキーワード
$key2 = "2.文献及び説明|文献及び説明\\(文献\\)|2 \n文献及び説明";
$key3 = "^様式POT/I .*\n";
$key4 = "新規性、 進歩性又は産業上の利用可能性についての見解の不作成";
//第VIII欄のキーワード
$key5 = "第V]]I欄 国際出願に対する意見";
//第IV欄のキーワード
$key6 = "第IV欄発明の単一性の欠如";
$key7 = "以下の理由により満足しない。";

$key8 = "^補充欄\n";
$key9 = "国際調査機関の見解書\n";
//第補充欄のキーワード
$key10 = "いずれかの欄の大きさが足りない場合第.*欄の続き([0-9]+)? ?\n";
$key11 = "いずれかの欄の大きさが足りない場合\n";
$key12 = "第.*欄の続き\n";
$key13 = "請求の範囲、明細書及び図面の明瞭性又は請求の範囲の明細書による十分な裏付についての意見を次に示す。\n";
$key14 = "したがって、 ?国際出願の次の部分について、 ?この見解書を作成した。";
$key15 = "に関する部分";
$key16 = "\(具体的に記載すること\)";
$key17 = "明細書、請求の範囲若しくは図面";
$key18 = "全部の請求項又は請求項";
$key19 = "について、国際調査報告が作成されていない。";
$key20 = "詳細については補充欄を参照すること。";
$key21 = "請求の範囲、明細書及び図面の明瞭性又は請求の範囲の明細書による十分な裏付についての意見を次に示す。";
$key22 = "(補充欄に続く)";
$key23 = "第VI欄ある種の引用文献";
$key24 = "第欄の続き";//$key11との組み合わせで、この文字列がある場合、ページ内容は数字のみ。翻訳不要。
$key25 = "第n欄優先権";
$key26 = "3.追加の意見(必要ならば)";
$key27 = "13.2及び13.3に規定する発明の単一性を次のように判断する。";
$key28 = "この国際出願の形式又は内容について、次の不備を発見した。";
//第I欄のキーワード（IPC番号を取得するため追加）
$key29 = "国際特許分類";
$key30 = "補充欄参照";
$key31 = "補充欄";

//実行元ファイルのハンドル
#h1 = hidemaruhandle(0);

//---------------------------------------2014.08.20 修正 start
//各国際出願番号順に、各文書毎に、IPC番号のリストを作成
call GrepIPCs $key29;

//IPC番号の記載が、補充欄参照の場合、補充欄からIPC番号を取得する
call GrepOtherIPCs;

//最終的に複数あるIPCをまとめる
call OrganizeIPCs;
//---------------------------------------2014.08.20 修正 end
//
//$key2を含むファイルのクリーン処理
//
call GrepKeyFile $key2;

#count = #i;
#i = 0;
while(#i != #count){
	$file = $files[#i];
	openfile "/h " + $file;

	gofiletop;
	searchdown $key1, regular, casesense;
	if(result){
		//$key1の上の余分な箇所を削除（国際調査機関の見解書などの文字）
		golinetop;
		beginsel;
		gofiletop;
		delete;
		//$key1と$key2との間の余分な箇所を削除
		down;
		beginsel;
		searchdown $key2, regular, casesense;
		golineend;
		delete;
		searchdown "文献及び説明";
		if(result){
			selectline;
			delete;
			up;
		}
		//第Ⅴ欄の印
		insert "V";
		searchdown "^文献[0-9]+(:|\\.)|^文献[0-9]+ JP", regular, casesense;
		if(result){
			//文頭に、文献1:がある場合
			golastupdated;
			down;
			golinetop;
			beginsel;
		}
		else{
			golastupdated;
			searchdown "^[0-9]+\\. ?JP", regular, casesense;
			if(result){
				//文頭に、1. JPがある場合
				golastupdated;
				down;
				golinetop;
				beginsel;
			}

		}//end of else
		if(result){
			//文献欄がある場合
			//searchdown "^\\[説明\\]|^説明|^\\([0-9]+\\) ?請求項[0-9]+|^請求項[0-9]+", regular, casesense;
			searchdown "^(\\[|<)説明(\\]|>)|^説明", regular, casesense;			
			if(result){
				golinetop;
				delete;
			}
			else{
				searchdown "^\\([0-9]+\\) ?(請求項|請求の範囲)[0-9]+|^・?(請求項|請求の範囲)[0-9]+.+(o|。)|^・?(請求項|請求の範囲):[0-9]+.+|^(・|<|\\()?(請求項|請求の範囲)[0-9]+.*(について)?>?\\)?\n|^文献[0-9]+.*は", regular, casesense;
				if(result){
					golinetop;
					delete;
				}
				else{
					//説明、請求項#で始まる文頭がない場合、再選択開始
					golastupdated;
					down;
					golinetop;
					beginsel;
					//$key3削除
					searchdown $key3, regular, casesense;
					if(result){
						golineend;
						delete;
					}
				}
			}
		}
		//$key3削除
		searchdown $key3, regular, casesense;
		if(result){
			selectline;
			delete;
		}
		save;
	}
	#i = #i + 1;
}

//#全ての処理対象ファイルを閉じるため、実行元ファイルをアクティブにする
//最後のファイル（000005など）は、自身のファイルであるから閉じることができないため
setactivehidemaru #h1;
call CloseFile #count;


//
//$key4を含むファイルのクリーン処理
//
call Clean $key4;

//
//$key5を含むファイルのクリーン処理
//
call Clean $key5;

//
//$key6を含むファイルのクリーン処理
//
call Clean $key6;

//
//$key8を含むファイルのクリーン処理
//
call Clean $key8;

//
//$key23を含むファイルのクリーン処理
//
call Clean $key23;

//
//$key25を含むファイルのクリーン処理
//
call Clean $key25;



//
//全ファイルの内容をひとつにまとめる
//
call GrepNums;

newfile;
insertreturn;
saveas "all.txt";


//新規作成して改行を入れたので、削除
backspace;

#j = 0;
while($nums[#j]!=""){
	
	call GrepKeyFile $nums[#j];
	#count = #i;
	#i = 0;
	while(#i != #count){
		//新規作成したファイルをアクティブにする
		//うまくハンドルが取れていなくてgrep結果ファイルを更新してしまっていたので修正
		setactivehidemaru findhidemaru( "all.txt" );
		insertfile $files[#i];
		insertreturn;
//---------------------------------------2014.08.20 修正 start
		if(#i == 0){
			searchup "国際出願番号POT/";
			down;
			golinetop;
			//Vの前にIPCを挿入し、改行
			insert $ipcNumsList[#j];
			insertreturn;
			gofileend;
			insertreturn;
		}
//---------------------------------------2014.08.20 修正 end
		#i = #i + 1;
	}
	#j = #j + 1;
}

setactivehidemaru findhidemaru( "all.txt" );

//
//全内容のクリーン処理
//
setcompatiblemode 0x0F;
replaceall "白明", "自明";
replaceall "At", "A1", casesense;
replaceall "&opt", "&EP", casesense;
replaceall "結品", "結晶";
replaceall "それそれ", "それぞれ";
replaceall "月重瘍", "腫瘍";
replaceall "未、満", "未満";
replaceall "、、", "、";
replaceall "、 、", "、";
replaceall "国際出願番号POT/ J P20 \\f[0-9]+", "JP20\\1" , regular, casesense;
replaceall "国際出願番号POT/ ?J P\\f[0-9|\\/]+\\f \\f[0-9]+", "JP\\1\\3" , regular, casesense;
replaceall "国際出願番号POT/ ?J P\\f[0-9|\\/]+", "JP\\1" , regular, casesense;
replaceall "国際出願番号P CT/ J P20 \\f[0-9]+", "JP20\\1" , regular, casesense;
replaceall "文献[0-9]+:\\f(WO|JP)", "\\0 \\1", regular, casesense;
replaceall "[0-9]+\\f:\\f[a-Z]+", "\\0: \\2", regular, nocasesense;
replaceall "^[0-9]+\\.\\f[a-Z]+", "\\0 \\1", regular, nocasesense;
replaceall "A(", "A (";
replaceall "A1(", "A1 (";
replaceall "A1&", "A1 & ";
replaceall "\\)\\f[0-9]+", "\\), \\1", regular, nocasesense;
//日本語文字間にある不要な半角スペースを削除
replaceall " \\f[ぁ-ン|亜-黑]+" , "\\1" , regular, nocasesense;

//文献[0-9]+:が文中にあったら、改行して文頭にもってくる
gofiletop;
while(true){
	searchdown "文献[0-9]+:", regular, nocasesense;
	if(result){
		if(x != 0) insertreturn;
	}
	else break;
}
replaceall ",全文,全図", ", 全文, 全図";
replaceall ",全文、全図", ", 全文, 全図";
replaceall "[0-9]+,\\f\\n\\f(段落|全文)+.*\\n", "\\0 \\2", regular, nocasesense;
replaceall ",段落【", ", 段落【";
replaceall "全文、", "全文, ";
replaceall "請求の範囲[0-9]+\\f \\f[0-9]+", "\\0\\2", regular, nocasesense;
replaceall "三差化学", "三菱化学";
replaceall "麒鹿解麦酒", "麒麟麦酒";
replaceall "絶縁月英", "絶縁膜";
replaceall "f毎", "海";
replaceall "文献[0-9]+: .*,\\f\\n\\f.*\\n", "\\0 \\2", regular, nocasesense;
replaceall "文献[0-9]+: .*\\]\\f\\n\\f.*\\n", "\\0 \\2", regular, nocasesense;
replaceall "文献[0-9]+: .*[0-9]+\\f\\n\\fAl.*\\n", "\\0 \\2", regular, nocasesense;
replaceall "Al&US", "A1 & US";
replaceall "Al&EP", "A1 & EP";
replaceall "[0-9]+\\f&WO", "\\0 & WO", regular, nocasesense;
replaceall "[0-9]+\\f&US", "\\0 & US", regular, nocasesense;
replaceall "\\]\\f&US", "\\0 & US", regular, nocasesense;
replaceall "&WO\\f[0-9]+", "& WO \\1", regular, nocasesense;
replaceall ",\\f(特許|請求|図)+", ", \\1", regular, nocasesense;
replaceall ",[", ", [";
replaceall "&US", "& US";
replaceall "US20", "US 20";
replaceall "\n&", " &", regular, nocasesense;
replaceall "全図\\n\\f\\(", "全図 \\1", regular, nocasesense;

//カタカナで途切れている箇所修正
replaceall "[ァ-ン|ー]+\\f\\n\\f.*\\n", "\\0\\2", regular, nocasesense;

//文末にある不要な半角スペースを削除
replaceall " \\n", "\\n", regular, nocasesense;
//カンマ調整
replaceall ",\\f[a-Z|0-9]+", ", \\1", regular, nocasesense;

replaceall $key13, "", regular, nocasesense;
replaceall "^有無", "", regular, nocasesense;
replaceall " 「", "「";
replaceall "非品質体", "非晶質体";
replaceall "Co11e", "Colle";
replaceall "月英", "膜";
replaceall "トレイン電極", "ドレイン電極";
replaceall "p\\f[0-9]+-", "p. \\1", regular, casesense;
replaceall "[0-9]+\\f直", "\\0頁", regular, casesense;
replaceall "胃月易", "胃腸";
replaceall "(ファミリーなし)", " (ファミリーなし)";
replaceall "常密度", "嵩密度";
replaceall "三差電機株式会社", "三菱電機株式会社";
replaceall "頭著な", "顕著な";
replaceall "POT規則", "PCT規則";
replaceall "グロロー", "クロロー";
replaceall "株式会社ウァーユ", "株式会社ヴァーユ";
replaceall "0 0", "00";
replaceall "士壌", "土壌";
replaceall "隠成処理", "隠蔽処理";
replaceall "增幅", "増幅";
replaceall "ュニツト", "ユニット";
replaceall "細目状相", "網目状相";
replaceall "導電性員武形物", "導電性賦形物";
replaceall "白重", "自重";
replaceall "アスヘクト比", "アスペクト比";
replaceall "心月成", "心臓";
replaceall "心月筋", "心筋";
replaceall "白体", "自体";
replaceall "転がり接角出", "転がり接触";
replaceall "宇幕表示", "字幕表示";
replaceall "往復連動", "往復運動";
replaceall "株式会社ミツトョ", "株式会社ミツトヨ";
replaceall "三差重工業", "三菱重工業";
replaceall "アドパンスト", "アドバンスト";
replaceall "株式会社C-GR I P", "株式会社C-GRIP";
replaceall "日立コミュニケーションテクノ1'シ'-", "日立コミュニケーションテクノロジー";
replaceall "日本ヒ'クター株式会社", "日本ビクター株式会社";
replaceall "株式会社ニチェイ", "株式会社ニチエイ";
replaceall "範略", "範疇";
replaceall "要付け", "裏付け";
replaceall "液品", "液晶";
replaceall "いo", "い。";
replaceall "角出媒", "触媒";
replaceall "ぃ", "い";
replaceall "負イ荷", "負荷";
replaceall "電イ荷", "電荷";
replaceall "洗f争", "洗浄";
replaceall "POT第", "PCT第";
replaceall "P C T", "PCT";
replaceall "要付", "裏付";
replaceall "白動", "自動";
replaceall "ゲイ素", "ケイ素";
replaceall "基確", "基礎";
replaceall "白身", "自身";
replaceall "簡所", "箇所";
replaceall "開開", "開閉";
replaceall "着月見白在", "着脱自在";
replaceall "貝占り付", "貼り付";
replaceall "貝占付", "貼付";
replaceall "ェタノール", "エタノール";
replaceall "接角出", "接触";
replaceall "ェチル", "エチル";
replaceall "ェキス", "エキス";
replaceall "白在", "自在";
replaceall "文宇", "文字";
replaceall $key21, "";
replaceall $key22, "";
replaceall $key23, "";
replaceall $key24, "";
replaceall $key28, "";


save;

exitall;
endmacro;


//***
//クリーン処理サブルーチン
//$$1:$key#
//***
Clean:
	call GrepKeyFile $$1;
	call CleanKeys $$1;

	setactivehidemaru #h1;
	call CloseFile #count;
	return;


//***
//grep結果からファイルリストを作るサブルーチン
//$$1:grepする文字
//***
GrepKeyFile:
	grep $$1, "*.txt", ".", regular, fullpath;

	//クリップボード履歴を念のため削除
	clearcliphist;
	//grepファイルの内容をコピー
	selectall;
	copy;

	beginclipboardread;
	#i=0;
	$a[#i]=getclipboard;

	//クリップボードから各ファイルパスを読み込む。
	while($a[#i]!=""){
		$line = $a[#i];
		//$lineに含まれている"("のインデックス
		#parenIndex = strstr($line, "(");
		$file = leftstr($line, #parenIndex);
		//ここで、ファイルオープンしようとすると失敗する(最初のファイルを何度も開けようとする)ので、
		//一旦ファイル名を配列に格納する
		$files[#i]=$file;
		//クリップボードの次の行を読み込む
		#i = #i + 1;
		$a[#i]=getclipboard;
	}
	return;


//***
//$key1より上、$key3、その他不要な箇所を削除するサブルーチン
//***
CleanKeys:
	#count = #i;
	#i = 0;
	while(#i != #count){
		$file = $files[#i];
		openfile "/h " + $file;
	
		//第VI欄ある種の引用文献のページ内容は翻訳不要なので消す
		if(strstr($$1, $key23) != -1){
			selectall;
			delete;
			insert $key23;
			save;
			#i = #i + 1;
			continue;
		}

		//$key11と$key24の組み合わせがある場合、ページ内容は数字のみで翻訳不要なので消す
		if(strstr($$1, $key8) != -1){
			gofiletop;
			searchdown $key11, regular;
			if(result){
				gofiletop;
				searchdown $key24;
				if(result){
					selectall;
					delete;
					insert $key24;
					save;
					#i = #i + 1;
					continue;
				}
			}
		}
		gofiletop;
		searchdown $key1, regular, casesense;
		if(result){
			if(strstr($$1, $key8) != -1){
				//国際出願番号の行をカットして先頭にペースト
				selectline;
				cut;
				gofiletop;
				paste;
				insertreturn;
				replacedown $key8, "", regular;
				replacedown $key9, "", regular;
				replacedown $key10, "", regular;
				replacedown $key11, "", regular;
				replacedown $key12, "", regular;
			}
			else{
				//$key1の上の余分な箇所を削除（国際調査機関の見解書などの文字）
				golinetop;
				beginsel;
				gofiletop;
				delete;
				down;
				if(strstr($$1, $key25) != -1){
					insert "II";
					beginsel;
					searchdown $key26;
					golineend;
					delete;
					endsel;
					//$key3削除
					searchdown $key3, regular, casesense;
					selectline;
					delete;
					save;
				}
				
				if(strstr($$1, $key4) != -1){
					gofiletop;
					searchdown $key4, regular, casesense;
					selectline;
					delete;
					insert "III";
					insertreturn;
					golinetop;
					beginsel;
					searchdown $key16, regular, casesense;
					golineend;
					delete;
					delete;
					endsel;
					searchdown $key17, regular, casesense;
					golinetop;
					beginsel;
					searchdown $key16, regular, casesense;
					golineend;
					delete;
					endsel;
					searchdown $key18, regular, casesense;
					golinetop;
					beginsel;
					searchdown $key16, regular, casesense;
					golineend;
					delete;
					endsel;
					searchdown $key19, regular, casesense;
					golinetop;
					beginsel;
					searchdown $key20, regular, casesense;
					golineend;
					delete;
					delete;
					delete;
					delete;
					delete;
					endsel;
				}
				else if(strstr($$1, $key5) != -1) insert "VIII";
				if(strstr($$1, $key6) != -1){
					insert "IV";
					beginsel;
					searchdown $key7, regular, casesense;
					golineend;
					delete;
					endsel;
					searchdown $key14, regular, casesense;
					golinetop;
					beginsel;
					searchdown $key15, regular, casesense;
					golineend;
					delete;
					replaceall $key27, "";
				}//end of else if
				insertreturn;
			}//end of else
			//$key3削除
			searchdown $key3, regular, casesense;
			selectline;
			delete;
			save;
		}//end of if
		#i = #i + 1;
	}//end of while
	return;


//***
//クローズ用サブルーチン
//##1:#count, クローズするファイル数
//***
CloseFile:
	#i = 0;
	while(#i != ##1){
		$file = $files[#i];
		closehidemaru findhidemaru($file);
		#i = #i + 1;
	}
	return;


//***
//grep結果から国際出願番号のリストを作るサブルーチン
//***
GrepNums:
	grep $key1, "*.txt", ".", regular, fullpath;

	//クリップボード履歴を念のため削除
	clearcliphist;
	//grepファイルの内容をコピー
	selectall;
	copy;

	beginclipboardread;
	#i=0;
	$a[#i]=getclipboard;
	//クリップボードから各ファイルパスを読み込む。
	while($a[#i]!=""){
		$line = $a[#i];

		//国際出願番号が重複しないようにリストを作成
		//2009.08.13 修正 000003までで全ての番号が格納できている
		//すでに全ての番号を格納しているのでループを出る
		if(strstr($line, "000004") != -1) break;

		//$lineに含まれている"/ "のインデックス
		#colonIndex = strstr($line, "/ ");
		if(#colonIndex == -1) #colonIndex = strstr($line, "/");
		#rightlen = strlen($line)-#colonIndex - 2;
		$num = rightstr($line, #rightlen);

		$nums[#i]=$num;
		//クリップボードの次の行を読み込む
		#i = #i + 1;
		$a[#i]=getclipboard;
	}
	return;

//------------------------------------------------------
//各国際出願番号順に、各文書毎に、IPC番号のリストを作成
//------------------------------------------------------
GrepIPCs:
	grep $$1, "*.txt", ".", regular, fullpath;

	//クリップボード履歴を念のため削除
	clearcliphist;
	//grepファイルの内容をコピー
	selectall;
	copy;

	beginclipboardread;
	#i=0;
	$a[#i]=getclipboard;

	$filename="";

	#k = 0;
	//クリップボードから各ファイルパスを読み込む。
	while($a[#i]!=""){
		$line = $a[#i];
		//$lineに含まれている"lnt.C1."のインデックス
		#ipcIndex = strstr($line, "lnt.C1.");

		if(#ipcIndex != -1){
			//lnt.C1.がある場合は、すぐ右隣に、H01などIPC番号が続く
			//lnt.C1.より右側のIPC番号を含む文字列取得
			//7は、"lnt.C1."の長さ
			#rightlen = strlen($line)-#ipcIndex - 7;
			$ipcNums = rightstr($line, #rightlen);
			//$ipcNums 例）G09F9/30(2006.01)1, GO2F1/1345(2006.01)i 

			//カンマと番号を含むIPC番号の羅列から、IPCだけを取得する
			call GetIPCs $ipcNums;
			$ipcList = $$return;

		}//end of if
		else{
			//補充欄参照の場合
			//lnt.C1.がない場合は、例）国際特許分類(I Pc)lnt.C1補充欄参照
			#parenIndex = strstr($line, "(");
			$filename = leftstr($line, #parenIndex);
		//補充欄参照の場合、IPCが羅列されている補充欄のファイル名をそのまま格納
			$ipcList = $filename;
		}//end of else

		//$ipcListを、$ipcNumsList[#k]に格納
		$ipcNumsList[#k] = $ipcList;

		#k = #k + 1;

		//クリップボードの次の行を読み込む
		#i = #i + 1;
		$a[#i]=getclipboard;
	}//end of while
	return;


//---------------------------------------------------------------
//IPC番号の記載が、補充欄参照の場合、補充欄からIPC番号を取得する
//---------------------------------------------------------------
GrepOtherIPCs:

#m = 0;
while (#m != #k){
	$ipcNums = $ipcNumsList[#m];
    #keyIndex = strstr($ipcNums, "C:\\");
	if(#keyIndex != -1){
		//補充欄参照の場合、そのファイルを開き、"POT/J"の一行を検索。"1(日.月.年)"の左の文字列が国際出願番号。		
		//$ipcNumsには補充欄参照と記載されたファイル名がそのまま格納されている。（000001のファイル）
		$filename = $ipcNums;
		openfile $filename;
		gofiletop;
		searchdown "POT/J";
		searchdown "1(";
		if(!result){
			break;
		}
		beginsel;
		golinetop;
		copy;
		
		beginclipboardread;
		#i=0;
		$a[#i]=getclipboard;
		//国際出願番号
		$line = $a[#i];

		//国際出願番号が途中で切れている場合があるので、最後の1を除いた右端5ケタを取得
		$iaCode = rightstr($line, 5);

		//取得した国際出願番号でgrepファイル。
		grep $iaCode, "*.txt", ".", regular, fullpath;

		//クリップボード履歴を念のため削除
		clearcliphist;
		//grepファイルの内容をコピー
		selectall;
		copy;

		beginclipboardread;
		#i=0;
		$b[#i]=getclipboard;

		//一旦grepした全てのファイルのフルパスを格納
		while($b[#i]!=""){
			#i = #i + 1;
			$b[#i]=getclipboard;
		}//end of while
	
		#i=0;	
		while($b[#i]!=""){
			//$lineは各ファイルのフルパス
			$line = $b[#i];
			//000001_####.txtのファイル（上で$iaCodeを参照したファイル）は既に開いているので、次のファイルに進む。
			if(strstr($line, $filename) != -1){
				#i = #i + 1;
				continue;
			}

			#parenIndex = strstr($line, "(");
			$file = leftstr($line, #parenIndex);

			openfile $file;
			//"補充欄"の文字で始まるファイルの内容を対象に、最終行の"様式POT/I"の検索
			gofiletop;
			searchdown $key31, word;
				
			if(!result){
				//補充欄なしなら次のファイルに進む
				#i = #i + 1;
				continue;
			}
			//"補充欄"の文字で始まるファイルが見つかった
			//最終行の"様式POT/I"の検索
			gofiletop;
			searchdown "様式POT/I";
			if(result){
				//すぐ上の行に移動
				up;
				selectline;
				searchdown "[ぁ-ン|亜-黑]", regular, inselect;
				if(result){
				    //"様式POT/I"の直前の行に、日本語が含まれていれば、スキップ。
					#i = #i + 1;
					continue;
				}
				//"様式POT/I"の直前の行に、日本語が含まれていなければIPC番号。
				//"の続き"の横からbeginselect. searchdown "様式POT/I" copy して、IPC番号を取得する。
				gofiletop;
				searchdown "の続き";
				down;
				golinetop;
				beginsel;
				searchdown "様式POT/I";
				golinetop;
				copy;

				//IPC番号を取得する
				//取得できない場合は、そのまま補充欄参照とする（後で手入力）
				beginclipboardread;
				$c[0]=getclipboard;
				//IPC番号は１行で羅列してあるので、コピーしたデータの１行目だけ取得でＯＫ
				$ipcTmpNums = $c[0];

				//$ipcTmpNumsを整理してIPC番号だけにまとめる
				call GetIPCs $ipcTmpNums;

				//まとめたら、$ipcNumsList[#m]に格納する
				$ipcNumsList[#m] = $$return;

				//IPC番号が取得できたのでwhileを出る（次以降のgrepファイル結果は無視）
				break;
			}
			#i = #i + 1;
			
		}//end of while

	//grepして開いた全てのファイルを閉じておく（clean処理でまた開くときにアラートがポップするため）
	//実行元ファイル以外を閉じるため、実行元ファイルをアクティブにする
	setactivehidemaru #h1;
	#i = 0;
	while($b[#i]!=""){
		//$lineは各ファイルのフルパス
		$line = $b[#i];
		#parenIndex = strstr($line, "(");
		$file = leftstr($line, #parenIndex);
		//15はfile名.txtの文字数
		$file = rightstr($file, 15);

		#a = findhidemaru( $file );
		if( #a != -1 ) {
			closehidemaru #a;
		}
		#i = #i + 1;
	}

	}//end of if

	#m = #m + 1;
}//end of while

return;

//-------------------------------------------
//最終的に複数あるIPCをまとめるサブルーチン
//-------------------------------------------
OrganizeIPCs:
#i = 0;
while ($ipcNumsList[#i] != ""){
	$ipcNums = $ipcNumsList[#i];
	#length = strlen($ipcNums);
	#j = 0;
	$tmp1 ="";
	while(#j != #length){
		$tmp2 = midstr($ipcNums, #j, 1);
		if(strstr($tmp1, $tmp2) == -1){
			$tmp1 = $tmp1 + $tmp2;
		}
		#j = #j + 1;
	}
	$ipcNumsList[#i] = $tmp1;

	#i = #i + 1;
}

return;

//--------------------------------------
//IPCだけをリストで取得するサブルーチン
//--------------------------------------
GetIPCs:

$ipcList ="";
$ipcNums = $$1;
while($ipcNums != ""){

	$ipcNum = leftstr($ipcNums, 1);

	if(($ipcNum != " ") && ($ipcNum != ",") && ($ipcNum != "\n")){
		//$ipcNumが取得できたのでIPC番号リストに格納

		$ipcList = $ipcList + $ipcNum;
		
		//次のIPC番号があるか？
		//カンマもしくは)iで区切られている
		#commaIndex = strstr($ipcNums, ",");
		#iIndex = strstr($ipcNums, "i");
		//カンマも)iもなければ、これ以上IPC番号はない
		if((#commaIndex == -1) && (#iIndex == -1)){
			break;
		}

		if(#commaIndex == -1){
		    if(#iIndex != -1){
				#rightlen = strlen($ipcNums) - #iIndex - 1;
			}
		}
		else{
			if(#iIndex != -1){
				if(#iIndex < #commaIndex){
					#rightlen = strlen($ipcNums) - #iIndex - 1;
				}
				else{
					#rightlen = strlen($ipcNums) - #commaIndex - 1;
				}
			}
			else{
				#rightlen = strlen($ipcNums) - #commaIndex - 1;
			}
		}
		
		$ipcNums = rightstr($ipcNums, #rightlen);

		//$ipcNumsが"", " \n", "\n"だったら、break
		if(($ipcNums == "") || ($ipcNums == " \n") || ($ipcNums == "\n")){
			break;
		}
		continue;
	}
	//$ipcNumsの先頭に" "やカンマがあったら省く
	$ipcNums = rightstr($ipcNums, strlen($ipcNums) - 1);
}// end of while

return $ipcList;
